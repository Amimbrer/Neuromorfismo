@page "/registro"
@inject IHttpClientFactory ClienFactory
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject Excepcion ExcepcionPersonalizada
@using WebMedicina.FrontEnd.ServiceDependencies;



<h3>Registro</h3>


<EditForm Model="@userInfo" OnInvalidSubmit="CrearUsuario">
    <DataAnnotationsValidator/>
    <div class="form-floating mb-3">
        <InputText @bind-Value="@userInfo.Nombre" class="form-control" id="inputNombre" placeholder="Nombre" />
        <label for="inputNombre">Nombre</label>
        <ValidationMessage For="@(() => userInfo.Nombre)"/>
    </div>
        <div class="form-floating mb-3">
        <InputText @bind-Value="@userInfo.Apellidos"  class="form-control" id="inputApellido" placeholder="Apellidos" />
        <label for="inputApellido">Apellidos</label>
    </div>
    <div class="mb-3">
        <label for="inputFechaNac" class="form-label">Fecha de Nacimiento</label>
        <InputDate @bind-Value="@userInfo.FechaNacimiento" class="form-control" id="inputFechaNac" />
    </div>
    <div class="form-floating mb-3">
        <InputText @bind-Value="@userInfo.NumHistoria" class="form-control" id="inputNumHistoria" placeholder="Número de Historia" />
        <label for="inputNumHistoria">Número de Historia</label>
    </div>
        <label for="inputPassword" class="form-label">Contraseña</label>
    <div class="input-group mb-3">
        <InputPassword @bind-Value="@userInfo.Password" class="input-group" id="inputPassword" placeholder="Contraseña" />
    </div>


</EditForm>

@code {
    UserInfo userInfo = new();

    private CrearHttpClient crearHttpClient;
    private HttpClient Http;


    protected override void OnInitialized() {
        try {
            crearHttpClient = new CrearHttpClient(ClienFactory);
            Http = crearHttpClient.ObtenerCliente();
        } catch (Exception ex) {
            ExcepcionPersonalizada.ConstruirPintarExcepcion(ex);
        }
    }

    private async Task CrearUsuario() {
        HttpResponseMessage respuesta = await Http.PutAsJsonAsync("cuentas/crear", userInfo);
        if (respuesta.IsSuccessStatusCode) {
            UserToken userToken = await respuesta.Content.ReadFromJsonAsync<UserToken>();
            await loginService.Login(userToken.Token);
            navigationManager.NavigateTo("");
        }
    }
}
