@inherits LayoutComponentBase
@inject EstilosBase estilosBase
@inject IJSRuntime js

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="estilosBase.currentTheme" />
    <MudDialogProvider />
    <MudSnackbarProvider />
<MudSnackbarProvider />
    


<CascadingValue Name="modoOscuro" Value="@_isDarkMode">
    <MudLayout Class="d-flex">
        <AuthorizeView>
            <Authorized>
                <MudAppBar Class="mud-elevation-25">
                            <MudHidden Breakpoint="Breakpoint.SmAndDown">
                                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Dark" Edge="Edge.Start" OnClick="@ToggleDrawer" />
                            </MudHidden>
                            <MudHidden Breakpoint="Breakpoint.MdAndUp">
                                <a href="">
                                    <img id="iconoNavBar" src="icono.png" alt="Icono" />
                                </a>
                            </MudHidden>
                    <MudSpacer />

                    @* Boton Modo Oscuro*@
                    <MudToggleIconButton @bind-Toggled="@_isDarkMode" Icon="@Icons.Material.Outlined.DarkMode" Title="Cambiar a modo oscuro"
                                            ToggledIcon="@Icons.Material.Outlined.LightMode" ToggledTitle="Cambiar a modo claro" />

                    @* Perfil  *@
                    <Perfil />
                </MudAppBar>

            @* Drawer solo para autenticados *@
                <MudDrawer @bind-Open="@open" ClipMode="clipMode" Elevation="1" Breakpoint="@Breakpoint.Md" Variant="@DrawerVariant.Responsive" PreserveOpenState="true">
                        <NavMenu />
                </MudDrawer>
                 <MudMainContent Class="cienHeight">
                    <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="d-flex flex-column relative">
                        @Body
                    </MudContainer>
                 </MudMainContent>
            </Authorized>
            <NotAuthorized>
                <MudMainContent id="loginContainer">
                    <MudContainer Fixed="true" Class="d-flex flex-column">
                        @Body
                    </MudContainer>
                </MudMainContent>
            </NotAuthorized>
            <Authorizing>
                @Body
            </Authorizing>
        </AuthorizeView>
    </MudLayout>
</CascadingValue>
@code {
    // Control del drawer pricnipal
    private bool open { get; set; } = true;
    private bool primerClick = true;
    private DrawerClipMode clipMode = DrawerClipMode.Always;

    // Control de modo oscuro
    private MudThemeProvider _mudThemeProvider = null!;
    private bool _isDarkMode { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        await base.OnAfterRenderAsync(firstRender);


        // Modo oscuro del sistema
        if (firstRender) {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
        }

    }

    void ToggleDrawer() {
        if (primerClick) {
            clipMode = DrawerClipMode.Docked;
        } 
        open = !open;
    }

}

